"""restart migration

Revision ID: e170f224a2b9
Revises: 
Create Date: 2024-10-20 08:00:22.463399

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e170f224a2b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('KSHS', 'USD', 'POUND', 'EURO', name='currencyenum'), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('exchange_rate', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('serial_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serial', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('serial_numbers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_serial_numbers_serial'), ['serial'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('permissions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_users_email'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staffs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_employed', sa.Date(), nullable=False),
    sa.Column('department', sa.Enum('SALES', 'ACCOUNTS', 'TECHNICAL', 'LOGISTICS', name='departmentenum'), nullable=False),
    sa.Column('employment_status', sa.Enum('ONGOING', 'TERMINATED', name='employmentstatusenum'), nullable=False),
    sa.Column('date_exited', sa.Date(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=False),
    sa.Column('kra_pin', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('currency', sa.Enum('KSHS', 'USD', 'POUND', 'EURO', name='currencyenum'), nullable=False),
    sa.Column('date_enrolled', sa.Date(), nullable=True),
    sa.Column('date_last_updated', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('account_limit', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customers_kra_pin'), ['kra_pin'], unique=True)

    op.create_table('jobcards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_card_number', sa.Integer(), nullable=False),
    sa.Column('job_card_date', sa.Date(), nullable=True),
    sa.Column('job_card_status', sa.Enum('COMPLETED', 'IN_PROGRESS', 'CANCELED', name='jobcardstatus'), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_card_number')
    )
    op.create_table('quotations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quotation_number', sa.Integer(), nullable=False),
    sa.Column('quotation_date', sa.Date(), nullable=True),
    sa.Column('quotation_days', sa.Integer(), nullable=True),
    sa.Column('quotation_due', sa.Date(), server_default=sa.text("(date(CURRENT_DATE, '+30 days'))"), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quotation_number')
    )
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=False),
    sa.Column('kra_pin', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('currency', sa.Enum('KSHS', 'USD', 'POUND', 'EURO', name='currencyenum'), nullable=False),
    sa.Column('date_registered', sa.Date(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('vendors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vendors_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_vendors_kra_pin'), ['kra_pin'], unique=True)
        batch_op.create_index(batch_op.f('ix_vendors_name'), ['name'], unique=True)

    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.Date(), nullable=False),
    sa.Column('days_until_due', sa.Integer(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('client_lpo_number', sa.String(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('vat_file_name', sa.String(), nullable=True),
    sa.Column('vat_file_path', sa.String(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('admin_id IS NOT NULL OR staff_id IS NOT NULL', name='check_admin_or_staff'),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_table('lpos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lpo_number', sa.Integer(), nullable=False),
    sa.Column('date_issued', sa.Date(), nullable=True),
    sa.Column('days_until_due', sa.Integer(), nullable=True),
    sa.Column('date_due', sa.Date(), server_default=sa.text("(date(CURRENT_DATE, '+30 days'))"), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lpo_number')
    )
    op.create_table('deliverynotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('delivery_number', sa.Integer(), nullable=False),
    sa.Column('delivery_date', sa.Date(), nullable=False),
    sa.Column('delivery_file_name', sa.String(), nullable=True),
    sa.Column('delivery_file_path', sa.String(), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('delivery_number')
    )
    op.create_table('jobcard_invoice',
    sa.Column('jobcard_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['jobcard_id'], ['jobcards.id'], ),
    sa.PrimaryKeyConstraint('jobcard_id', 'invoice_id')
    )
    op.create_table('purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_number', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(), nullable=True),
    sa.Column('date_purchased', sa.Date(), nullable=False),
    sa.Column('date_due', sa.Date(), nullable=False),
    sa.Column('delivered_by', sa.String(), nullable=False),
    sa.Column('delivery_date', sa.Date(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('lpo_id', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['lpo_id'], ['lpos.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('vat', sa.Float(), nullable=True),
    sa.Column('vat_percentage', sa.Enum('VAT_0', 'VAT_2', 'VAT_10', 'VAT_16', name='vatenum'), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('serial_number_id', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('lpo_id', sa.Integer(), nullable=True),
    sa.Column('quotation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['lpo_id'], ['lpos.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.ForeignKeyConstraint(['quotation_id'], ['quotations.id'], ),
    sa.ForeignKeyConstraint(['serial_number_id'], ['serial_numbers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number_id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_mode', sa.Enum('CASH', 'MPESA', 'BANK_TRANSFER', 'CHEQUE', 'BANK_DEPOSIT', 'OTHERS', name='paymentmodeenum'), nullable=False),
    sa.Column('date_paid', sa.Date(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_reference', sa.String(), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('purchase_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase_invoice',
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.PrimaryKeyConstraint('purchase_id', 'invoice_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('purchase_invoice')
    op.drop_table('payments')
    op.drop_table('items')
    op.drop_table('purchases')
    op.drop_table('jobcard_invoice')
    op.drop_table('deliverynotes')
    op.drop_table('lpos')
    op.drop_table('invoices')
    with op.batch_alter_table('vendors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vendors_name'))
        batch_op.drop_index(batch_op.f('ix_vendors_kra_pin'))
        batch_op.drop_index(batch_op.f('ix_vendors_email'))

    op.drop_table('vendors')
    op.drop_table('quotations')
    op.drop_table('jobcards')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customers_kra_pin'))

    op.drop_table('customers')
    op.drop_table('categories')
    op.drop_table('staffs')
    op.drop_table('admins')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('serial_numbers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_serial_numbers_serial'))

    op.drop_table('serial_numbers')
    op.drop_table('currencies')
    # ### end Alembic commands ###
